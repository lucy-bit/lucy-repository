1
00:00:02,056 --> 00:00:06,919
（计算机如何工作） （数据和二进制）

2
00:00:08,775 --> 00:00:11,460
嗨！我叫Limor Fried，

3
00:00:11,460 --> 00:00:14,720
我是Adafruit工业的一名工程师。

4
00:00:14,919 --> 00:00:17,719
这是我做工程和设计的地方，

5
00:00:17,719 --> 00:00:21,619
我为时尚、音乐和科技设计电路。

6
00:00:23,140 --> 00:00:24,879
我是Federico Gomez Suarez，

7
00:00:24,879 --> 00:00:28,219
我是微软编程至善的一名软件工程师。

8
00:00:28,219 --> 00:00:33,579
我在研究如何用技术解决我们时代的一些社会问题。

9
00:00:37,600 --> 00:00:41,399
你可能听说过，计算机是通过很多1和0起作用的。

10
00:00:41,399 --> 00:00:45,679
或者你可能见过这样庞大数据的图片。

11
00:00:45,679 --> 00:00:50,320
但是现在几乎没有人直接处理1和0了。

12
00:00:50,320 --> 00:00:55,399
但是1和0仍然在计算机内部的工作中，起着重要的作用。

13
00:00:56,399 --> 00:01:02,600
在计算机内部，电线和电路运送所有的信息。

14
00:01:02,600 --> 00:01:06,680
如何用电来存储或表达信息？

15
00:01:06,680 --> 00:01:09,679
如果有一条有电流通过的电线，

16
00:01:09,879 --> 00:01:13,519
信号能是打开或关闭的。

17
00:01:13,519 --> 00:01:17,019
这里没有多少选择，但这非常重要。

18
00:01:17,019 --> 00:01:21,159
一条电线上，我们能表示是或否，

19
00:01:21,159 --> 00:01:23,319
对或错，

20
00:01:23,319 --> 00:01:25,419
1或0，

21
00:01:25,420 --> 00:01:27,640
或者其它只有两个选项的事物。

22
00:01:27,640 --> 00:01:31,519
单条线路上的开/关状态，被成为一个比特，

23
00:01:31,519 --> 00:01:34,939
它是计算机能够存储的信息的最小单位。

24
00:01:34,939 --> 00:01:38,993
更多的电线意味着更多的比特：更多的1和0。

25
00:01:38,993 --> 00:01:43,453
有了更多的比特，就能表达更复杂的信息。

26
00:01:43,453 --> 00:01:46,411
为了理解这些，我们需要学一些关于二进制系统的知识。

27
00:01:46,412 --> 00:01:51,239
（二进制系统）

28
00:01:52,224 --> 00:01:56,439
在十进制系统中，我们有0到9这十个数字，

29
00:01:56,439 --> 00:01:59,259
这是我们学会的如何计数的方法。

30
00:01:59,260 --> 00:02:05,200
在二进制系统中，我们只有两个数字：0和1，

31
00:02:05,200 --> 00:02:08,539
用这两个数字，我们能数出任何数字。

32
00:02:09,400 --> 00:02:10,500
它是这样工作的，

33
00:02:10,500 --> 00:02:13,400
在我们都使用的十进制中，

34
00:02:13,400 --> 00:02:16,439
数字中的每一位都有不同的值。

35
00:02:16,439 --> 00:02:21,379
这是个位，十位，百位，千位，等等。

36
00:02:21,379 --> 00:02:26,780
例如，9在百位上，表示900。

37
00:02:26,780 --> 00:02:29,439
在二进制中，每一位也表示一个值。

38
00:02:29,639 --> 00:02:34,619
但它不是每位乘以10，而是乘以2。

39
00:02:34,620 --> 00:02:41,939
因此这是1位，2位，4位，8位，等等。

40
00:02:41,939 --> 00:02:47,840
例如，数字9在二进制下，就是1001。

41
00:02:47,840 --> 00:02:57,439
为了计算它，我们需要加1次8，0次4，0次2，和1次1。

42
00:02:57,639 --> 00:03:01,259
基本上没人需要这样计算，因为计算机会帮我们。

43
00:03:02,599 --> 00:03:07,560
重要的是，任何数字都能只通过1和0来代表，

44
00:03:07,560 --> 00:03:11,039
或者通过一些电线的开和关。

45
00:03:11,039 --> 00:03:14,780
用的线越多，能存储的数字就越大。

46
00:03:14,780 --> 00:03:21,340
用8条线，就能存储0到255之间的数字。

47
00:03:21,340 --> 00:03:22,800
这是8个1.

48
00:03:22,800 --> 00:03:29,380
用32条线，你就能存储从0到40亿多的数字。

49
00:03:30,400 --> 00:03:34,560
通过二进制系统，能表达任何你想要的数字。

50
00:03:34,560 --> 00:03:37,879
但是其它类型的信息怎么办呢？

51
00:03:37,879 --> 00:03:41,199
比如文字、图片或者声音呢？

52
00:03:41,199 --> 00:03:46,219
这些信息也能够通过数字来代表。

53
00:03:47,979 --> 00:03:50,979
（二进制中的文字）

54
00:03:50,979 --> 00:03:53,079
想象一下字母表里的字母。

55
00:03:53,080 --> 00:03:55,300
那你能给每个字母分配一个数字。

56
00:03:55,300 --> 00:03:58,340
A可以是1，B是2，如此类推。

57
00:03:58,539 --> 00:04:03,120
你能用一系列的数字代替任何单词或段落。

58
00:04:03,120 --> 00:04:08,420
正如我们看到的一样，这些数字能够被存储为电信号的开或关。

59
00:04:09,740 --> 00:04:15,620
你所看到的每个网页或手机上的单词，都是通过这样的系统来表示的。

60
00:04:16,800 --> 00:04:20,490
（二进制中的图片）

61
00:04:21,160 --> 00:04:26,860
现在，让我们再想想照片、视频和其它显示在屏幕上的图形。

62
00:04:26,860 --> 00:04:31,300
所有这些信息都能通过很小的，叫做像素的点来表示。

63
00:04:31,300 --> 00:04:33,500
每个点都有它的颜色。 （红、绿、蓝）

64
00:04:33,500 --> 00:04:37,420
每个颜色都能用数字代表。 （红、绿、蓝）

65
00:04:37,420 --> 00:04:41,879
想象一下，某个图片是由上百万个像素组成的，

66
00:04:42,079 --> 00:04:45,500
视频每秒钟显示30张图片

67
00:04:45,500 --> 00:04:47,899
现在，我们在这里谈论的，就是一大堆数据了。

68
00:04:49,589 --> 00:04:53,049
（二进制中的声音）

69
00:04:53,540 --> 00:04:56,980
声音基本上就是空气中一系列的振动。

70
00:04:57,899 --> 00:05:02,039
振动也能通过波形图像来表示。

71
00:05:02,459 --> 00:05:06,279
波形图像中的任何点也能通过一个数字来表示。

72
00:05:07,019 --> 00:05:11,680
通过这样的方法，任何声音都能被分解成一系列的数字。

73
00:05:12,100 --> 00:05:17,439
如果需要高质量的声音，那么就需要32位音频，否则8位就够了。

74
00:05:17,639 --> 00:05:21,139
更多的位数意味着更大范围的数字。

75
00:05:23,199 --> 00:05:26,699
当你用计算机写代码，或创造自己的程序，

76
00:05:26,699 --> 00:05:29,800
你不是直接在写1和0。

77
00:05:29,800 --> 00:05:33,139
但你会处理图片、声音或视频。

78
00:05:33,139 --> 00:05:36,560
因此，如果你想理解计算机里是如何工作的，

79
00:05:36,560 --> 00:05:39,319
它会把所有的都变成简单的1和0。

80
00:05:39,319 --> 00:05:42,139
这后面就是电路里的电信号。

81
00:05:43,319 --> 00:05:49,519
它们是计算机如何输入、存储、处理和输出信息的核心。

82
00:05:56,000 --> 00:06:01,000
字幕由Amara.org社区提供

